<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <groupId>de.scrum-master</groupId>
  <artifactId>threadsafe-classloader</artifactId>
  <version>1.0-SNAPSHOT</version>

  <name>ThreadSafeClassLoader</name>
  <description>
    Wrap thread-unsafe classes/libraries into thread-local, isolating classloader
    in order to be able to use them concurrently
  </description>
  <url>https://github.com/kriegaex/ThreadSafeClassLoader</url>

  <licenses>
    <license>
      <name>GNU General Public License (GPL) version 3.0</name>
      <url>http://www.gnu.org/licenses/gpl-3.0.txt</url>
      <distribution>repo</distribution>
    </license>
  </licenses>

  <developers>
    <developer>
      <name>Alexander Kriegisch</name>
      <organization>Scrum-Master.de</organization>
      <organizationUrl>http://scrum-master.de</organizationUrl>
    </developer>
  </developers>

  <scm>
    <url>https://github.com/kriegaex/ThreadSafeClassLoader</url>
    <connection>scm:git:https://github.com/kriegaex/ThreadSafeClassLoader.git</connection>
    <developerConnection>scm:git:https://github.com/kriegaex/ThreadSafeClassLoader.git</developerConnection>
    <tag>HEAD</tag>
  </scm>

  <prerequisites>
    <maven>3.1.0</maven>
  </prerequisites>

  <properties>
    <!-- If you want to build from an IDE like IDEA or Eclipse and use GnuPG version >= v2.0,
    set the parameter to true in order to get a nice GUI dialog for entering the passphrase.
    If you want to build from a console, set it to false or override it via -DgpgGuiPassphrase=false. -->
    <gpgGuiPassphrase>true</gpgGuiPassphrase>

    <!-- If you have multiple GnuPG signing keys on your keyring, the first one is used as the default key.
    In order to use another one, specify the desired key ID here, otherwise you may just leave the parameter
    empty or override it via -DgpgKeyId=. It does not hurt to always specify it, though. -->
    <gpgKeyId>70CC1444</gpgKeyId>

    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>

    <!-- Maven Compiler Plugin -->
    <maven.compiler.source>1.8</maven.compiler.source>
    <maven.compiler.target>1.8</maven.compiler.target>

    <!-- JUnit, Spock, Geb, Selenium -->
    <version.junit>4.12</version.junit>
    <version.spock>1.0-groovy-2.4</version.spock>
    <version.groovy>2.4.7</version.groovy>
    <version.groovy-eclipse-compiler>2.9.2-01</version.groovy-eclipse-compiler>
    <version.groovy-eclipse-batch>2.4.3-01</version.groovy-eclipse-batch>

  </properties>

  <build>

    <pluginManagement>
      <plugins>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-compiler-plugin</artifactId>
          <version>3.6.0</version>
          <configuration>
            <source>${maven.compiler.source}</source>
            <target>${maven.compiler.target}</target>
            <!-- IMPORTANT -->
            <useIncrementalCompilation>false</useIncrementalCompilation>
            <encoding>${project.build.sourceEncoding}</encoding>
            <compilerId>groovy-eclipse-compiler</compilerId>
          </configuration>
          <dependencies>
            <dependency>
              <groupId>org.codehaus.groovy</groupId>
              <artifactId>groovy-eclipse-compiler</artifactId>
              <version>${version.groovy-eclipse-compiler}</version>
            </dependency>
            <dependency>
              <groupId>org.codehaus.groovy</groupId>
              <artifactId>groovy-eclipse-batch</artifactId>
              <version>${version.groovy-eclipse-batch}</version>
            </dependency>
          </dependencies>
        </plugin>
        <plugin>
          <groupId>org.codehaus.groovy</groupId>
          <artifactId>groovy-eclipse-compiler</artifactId>
          <version>${version.groovy-eclipse-compiler}</version>
          <extensions>true</extensions>
        </plugin>

        <!-- Enforce important build rules -->
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-enforcer-plugin</artifactId>
          <version>1.4.1</version>
          <executions>
            <execution>
              <id>enforcer-rules-error</id>
              <goals>
                <goal>enforce</goal>
              </goals>
              <configuration>
                <fail>true</fail>
                <skip>false</skip>
                <rules>
                  <requireMavenVersion>
                    <version>3.2.5</version>
                  </requireMavenVersion>
                  <requireJavaVersion>
                    <version>1.8</version>
                  </requireJavaVersion>
                  <requirePluginVersions/>
                  <requireReleaseDeps>
                    <onlyWhenRelease>true</onlyWhenRelease>
                  </requireReleaseDeps>
                  <reactorModuleConvergence/>
                </rules>
              </configuration>
            </execution>
            <execution>
              <id>enforcer-rules-warning</id>
              <goals>
                <goal>enforce</goal>
              </goals>
              <configuration>
                <fail>false</fail>
                <skip>false</skip>
                <rules>
                  <banDistributionManagement/>
                  <dependencyConvergence/>
                  <banDuplicateClasses>
                    <findAllDuplicates>true</findAllDuplicates>
                    <ignoreClasses>
                      <!--<ignoreClass>scala.*</ignoreClass>-->
                    </ignoreClasses>
                    <dependencies>
                      <!--
                      <dependency>
                        <groupId>javax</groupId>
                        <artifactId>javaee-web-api</artifactId>
                        <ignoreClasses>
                          <ignoreClass>*</ignoreClass>
                        </ignoreClasses>
                      </dependency>
                      -->
                    </dependencies>
                  </banDuplicateClasses>
                </rules>
              </configuration>
            </execution>
          </executions>
          <dependencies>
            <dependency>
              <groupId>org.codehaus.mojo</groupId>
              <artifactId>extra-enforcer-rules</artifactId>
              <version>1.0-beta-6</version>
            </dependency>
          </dependencies>
        </plugin>

        <!-- Check forbidden API usage (e.g. calls using default locales) -->
        <plugin>
          <groupId>de.thetaphi</groupId>
          <artifactId>forbiddenapis</artifactId>
          <version>2.2</version>
          <configuration>
            <failOnUnsupportedJava>false</failOnUnsupportedJava>
            <failOnViolation>false</failOnViolation>
            <bundledSignatures>
              <bundledSignature>jdk-unsafe</bundledSignature>
              <bundledSignature>jdk-deprecated</bundledSignature>
              <bundledSignature>jdk-internal</bundledSignature>
              <bundledSignature>jdk-non-portable</bundledSignature>
              <!--<bundledSignature>commons-io-unsafe-2.4</bundledSignature>-->
            </bundledSignatures>
            <!-- If we ever want to generate warnings for our own set of method signatures:
            <signaturesFiles>
              <signaturesFile>./rel/path/to/signatures.txt</signaturesFile>
            </signaturesFiles>
            -->
          </configuration>
          <executions>
            <execution>
              <goals>
                <goal>check</goal>
                <goal>testCheck</goal>
              </goals>
            </execution>
          </executions>
        </plugin>

        <!-- Check for new dependency and plugin versions -->
        <plugin>
          <groupId>org.codehaus.mojo</groupId>
          <artifactId>versions-maven-plugin</artifactId>
          <version>2.2</version>
        </plugin>

        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-surefire-plugin</artifactId>
          <version>2.18.1</version>
          <configuration>
            <excludes>
              <exclude>**/IT*.java</exclude>
            </excludes>
            <systemPropertyVariables>
              <test.tmpdir>${project.build.directory}/tmp</test.tmpdir>
              <geb.env>${geb.env}</geb.env>
            </systemPropertyVariables>
          </configuration>
        </plugin>

        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-surefire-report-plugin</artifactId>
          <version>2.18.1</version>
        </plugin>

        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-failsafe-plugin</artifactId>
          <version>2.18.1</version>
          <configuration>
            <systemPropertyVariables>
              <test.tmpdir>${project.build.directory}/tmp</test.tmpdir>
              <geb.env>${geb.env}</geb.env>
            </systemPropertyVariables>
          </configuration>
          <executions>
            <execution>
              <id>integration-tests</id>
              <goals>
                <goal>integration-test</goal>
                <goal>verify</goal>
              </goals>
            </execution>
          </executions>
        </plugin>

        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-clean-plugin</artifactId>
          <version>2.5</version>
        </plugin>

        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-install-plugin</artifactId>
          <version>2.5.2</version>
          <configuration>
            <!-- Avoid uploading incomplete releases when build fails in submodule -->
            <installAtEnd>true</installAtEnd>
          </configuration>
        </plugin>

        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-deploy-plugin</artifactId>
          <version>2.8.2</version>
          <configuration>
            <!-- Avoid uploading incomplete releases when build fails in submodule -->
            <deployAtEnd>true</deployAtEnd>
          </configuration>
        </plugin>

        <!-- Conveniently double-click goals like 'dependency:analyze' and 'dependency:tree' in IDEA -->
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-dependency-plugin</artifactId>
          <version>2.10</version>
        </plugin>

        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-site-plugin</artifactId>
          <version>3.6</version>
        </plugin>

        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-resources-plugin</artifactId>
          <version>3.0.1</version>
          <configuration>
            <encoding>${project.build.sourceEncoding}</encoding>
          </configuration>
        </plugin>

        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-jar-plugin</artifactId>
          <version>3.0.2</version>
          <executions>
            <execution>
              <id>package-tests</id>
              <phase>package</phase>
              <goals>
                <goal>test-jar</goal>
              </goals>
            </execution>
          </executions>
          <configuration>
            <archive>
              <manifest>
                <addDefaultSpecificationEntries>true</addDefaultSpecificationEntries>
                <addDefaultImplementationEntries>true</addDefaultImplementationEntries>
              </manifest>
            </archive>
          </configuration>
        </plugin>

        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-gpg-plugin</artifactId>
          <version>1.6</version>
          <configuration>
            <useAgent>${gpgGuiPassphrase}</useAgent>
            <keyname>${gpgKeyId}</keyname>
            <executable>c:\Program Files (x86)\GNU\GnuPG\gpg2.exe</executable>
          </configuration>
          <executions>
            <execution>
              <id>sign-artifacts</id>
              <phase>verify</phase>
              <goals>
                <goal>sign</goal>
              </goals>
            </execution>
          </executions>
        </plugin>

        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-source-plugin</artifactId>
          <version>3.0.1</version>
          <executions>
            <execution>
              <id>attach-sources</id>
              <phase>package</phase>
              <goals>
                <goal>jar-no-fork</goal>
                <goal>test-jar</goal>
              </goals>
            </execution>
          </executions>
        </plugin>

        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-javadoc-plugin</artifactId>
          <version>2.10.4</version>
          <executions>
            <execution>
              <id>attach-javadocs</id>
              <phase>package</phase>
              <goals>
                <goal>jar</goal>
                <goal>test-jar</goal>
              </goals>
            </execution>
          </executions>
        </plugin>

        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-release-plugin</artifactId>
          <version>2.4.1</version>
        </plugin>

      </plugins>
    </pluginManagement>

    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-compiler-plugin</artifactId>
      </plugin>
      <plugin>
        <groupId>org.codehaus.groovy</groupId>
        <artifactId>groovy-eclipse-compiler</artifactId>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-failsafe-plugin</artifactId>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-install-plugin</artifactId>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-deploy-plugin</artifactId>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-dependency-plugin</artifactId>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-resources-plugin</artifactId>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-jar-plugin</artifactId>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-release-plugin</artifactId>
      </plugin>
  </plugins>
  </build>

  <dependencyManagement>
    <dependencies>
      <!--========== Compile dependencies ==========-->

      <!-- Classloader isolation -->
      <dependency>
        <groupId>org.xeustechnologies</groupId>
        <artifactId>jcl-core</artifactId>
        <version>2.8</version>
      </dependency>
      <!-- Dynamic proxy creation in JCL + in Spock -->
      <dependency>
        <groupId>cglib</groupId>
        <artifactId>cglib-nodep</artifactId>
        <version>3.2.4</version>
      </dependency>

      <!--========== Test dependencies ==========-->

      <!-- JUnit -->
      <dependency>
        <groupId>junit</groupId>
        <artifactId>junit</artifactId>
        <version>${version.junit}</version>
        <scope>test</scope>
      </dependency>
      <!-- Groovy + Spock -->
      <dependency>
        <groupId>org.codehaus.groovy</groupId>
        <artifactId>groovy-all</artifactId>
        <version>${version.groovy}</version>
        <scope>test</scope>
      </dependency>
      <dependency>
        <groupId>org.spockframework</groupId>
        <artifactId>spock-core</artifactId>
        <version>${version.spock}</version>
        <scope>test</scope>
      </dependency>
      <!-- Mock final classes and classes without default constructors in Spock -->
      <dependency>
        <groupId>org.objenesis</groupId>
        <artifactId>objenesis</artifactId>
        <version>2.2</version>
        <scope>test</scope>
      </dependency>
      <!-- Avoid "SLF4J: Failed to load class org.slf4j.impl.StaticLoggerBinder" when using JCL -->
      <dependency>
        <groupId>org.slf4j</groupId>
        <artifactId>slf4j-nop</artifactId>
        <version>1.7.21</version>
        <scope>test</scope>
      </dependency>
      <!-- veraPDF is not thread-safe, thus a good object for integration tests -->
      <dependency>
        <groupId>org.verapdf</groupId>
        <artifactId>core</artifactId>
        <version>1.1.5</version>
        <scope>test</scope>
      </dependency>
      <dependency>
        <groupId>org.verapdf</groupId>
        <artifactId>validation-model</artifactId>
        <version>1.1.6</version>
        <scope>test</scope>
      </dependency>

    </dependencies>
  </dependencyManagement>

  <dependencies>
    <!--========== Compile dependencies ==========-->
    <dependency>
      <groupId>org.xeustechnologies</groupId>
      <artifactId>jcl-core</artifactId>
    </dependency>
    <dependency>
      <groupId>cglib</groupId>
      <artifactId>cglib-nodep</artifactId>
    </dependency>

    <!--========== Test dependencies ==========-->
    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
    </dependency>
    <dependency>
      <groupId>org.codehaus.groovy</groupId>
      <artifactId>groovy-all</artifactId>
    </dependency>
    <dependency>
      <groupId>org.spockframework</groupId>
      <artifactId>spock-core</artifactId>
    </dependency>
    <dependency>
      <groupId>org.objenesis</groupId>
      <artifactId>objenesis</artifactId>
    </dependency>
    <dependency>
      <groupId>org.slf4j</groupId>
      <artifactId>slf4j-nop</artifactId>
    </dependency>
    <dependency>
      <groupId>org.verapdf</groupId>
      <artifactId>core</artifactId>
    </dependency>
    <dependency>
      <groupId>org.verapdf</groupId>
      <artifactId>validation-model</artifactId>
    </dependency>
  </dependencies>

  <profiles>

    <profile>
      <id>check-maven</id>
      <build>
        <plugins>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-enforcer-plugin</artifactId>
          </plugin>
          <plugin>
            <groupId>de.thetaphi</groupId>
            <artifactId>forbiddenapis</artifactId>
          </plugin>
          <plugin>
            <groupId>org.codehaus.mojo</groupId>
            <artifactId>versions-maven-plugin</artifactId>
          </plugin>
        </plugins>
      </build>
    </profile>

    <profile>
      <id>ossrh</id>
      <build>
        <plugins>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-gpg-plugin</artifactId>
          </plugin>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-source-plugin</artifactId>
          </plugin>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-javadoc-plugin</artifactId>
          </plugin>
        </plugins>
      </build>
    </profile>

  </profiles>

    <repositories>
      <repository>
        <snapshots>
          <enabled>true</enabled>
        </snapshots>
        <id>vera-dev</id>
        <name>Vera development</name>
        <url>http://artifactory.openpreservation.org/artifactory/vera-dev</url>
      </repository>
    </repositories>

  <distributionManagement>
    <snapshotRepository>
      <id>ossrh</id>
      <url>https://oss.sonatype.org/content/repositories/snapshots</url>
    </snapshotRepository>
    <repository>
      <id>ossrh</id>
      <url>https://oss.sonatype.org/service/local/staging/deploy/maven2/</url>
    </repository>
  </distributionManagement>

</project>
